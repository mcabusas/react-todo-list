{"version":3,"sources":["components/Header.js","components/NotesReminders.js","components/Todos.js","components/CompletedTodos.js","components/Todos-Notes.js","App.js","index.js"],"names":["Header","urgency","setUrgency","todos","setTodos","todoTitleText","setTodoTitleText","status","setDescriptionText","useState","show","setShow","handleClose","Row","Col","md","style","fontWeight","length","forEach","todo","toString","getLength","Button","variant","id","onClick","className","offset","Modal","onHide","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","e","target","value","console","log","preventDefault","name","disabled","selected","Footer","uuidv4","title","alert","NotesReminders","note","notes","setNotes","noteContent","setNoteContent","classType","editNoteHandler","map","el","content","filter","as","rows","defaultValue","onKeyPress","event","charCode","Todos","filteredTodo","editTaskTitleBtnHandler","radioClassName","statusClassName","CompletedTodos","TodoNotes","noteType","setNoteType","size","fontSize","App","useEffect","getTodosFromLocalStorage","getNotesFromLocalStorage","saveTodosToLocalStorage","saveNotesToLocalStorage","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","localNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae0b0d5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Button, Col, Modal, Form } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Header = ({\r\n  urgency,\r\n  setUrgency,\r\n  todos,\r\n  setTodos,\r\n  todoTitleText,\r\n  setTodoTitleText,\r\n  setDescriptionText,\r\n  status,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const todoTitleTextHandler = (e) => {\r\n    setTodoTitleText(e.target.value);\r\n  };\r\n\r\n  // const descriptionTextHandler = (e) => {\r\n  //   setDescriptionText(e.target.value);\r\n  // };\r\n\r\n  const setUrgencyHandler = (e) => {\r\n    console.log(e.target.value);\r\n    e.preventDefault();\r\n    setUrgency(e.target.value);\r\n  };\r\n\r\n  const getLength = () => {\r\n    let length = 0;\r\n    todos.forEach((todo) => {\r\n      if (todo.status === \"pending\" || todo.status === \"in progress\") {\r\n        length++;\r\n      }\r\n    });\r\n    return length.toString();\r\n  };\r\n\r\n  const submitTodoHander = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (urgency !== \"\" && todoTitleText !== \"\") {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          id: uuidv4(),\r\n          title: todoTitleText,\r\n          urgency: urgency,\r\n          status: status,\r\n        },\r\n      ]);\r\n      setTodoTitleText(\"\");\r\n      setUrgency(\"\");\r\n      handleClose();\r\n    } else {\r\n      alert(\"Input title and/or urgency of task\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h3 style={{ fontWeight: \"700\" }}>You've got {getLength()} left</h3>\r\n        </Col>\r\n        <Button variant=\"primary\" id=\"addTaskBtn\" onClick={handleShow}>\r\n          <span className=\"material-icons\" id=\"addIcon\">\r\n            add\r\n          </span>\r\n          <p>Add Task</p>\r\n        </Button>\r\n\r\n        <Col md={{ offset: 2 }}>\r\n          <p>Aug 18, 2021</p>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add new task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Task:</Form.Label>\r\n              <Form.Control type=\"text\" onChange={todoTitleTextHandler} />\r\n            </Form.Group>\r\n            {/* <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Description.</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={descriptionTextHandler}\r\n              />\r\n            </Form.Group> */}\r\n            <Row>\r\n              <Col className=\"mb-3\">\r\n                <select onChange={setUrgencyHandler} name=\"todos\">\r\n                  <option value=\"\" disabled selected>\r\n                    Urgency\r\n                  </option>\r\n                  <option value=\"minor\">Minor</option>\r\n                  <option value=\"normal\">Normal</option>\r\n                  <option value=\"critical\">Critical</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={submitTodoHander}>\r\n            Save Changes\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Form, Modal, Button } from \"react-bootstrap\";\r\n\r\nconst NotesReminders = ({\r\n  note,\r\n  notes,\r\n  setNotes,\r\n  noteContent,\r\n  setNoteContent,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  let classType = \"\";\r\n\r\n  const deleteNote = () => {\r\n    setNotes(notes.filter((el) => el.id !== note.id));\r\n  };\r\n\r\n  const noteContentHander = (e) => {\r\n    setNoteContent(e.target.value);\r\n  };\r\n\r\n  const editNoteHandler = () => {\r\n    if (noteContent !== \"\") {\r\n      setNotes(\r\n        notes.map((el) => {\r\n          if (el.id === note.id) {\r\n            return {\r\n              ...el,\r\n              content: noteContent,\r\n            };\r\n          }\r\n          return el;\r\n        })\r\n      );\r\n      handleClose();\r\n    } else {\r\n      alert(\"please insert content before submitting\");\r\n    }\r\n  };\r\n\r\n  if (note.type === \"reminder\") {\r\n    classType = \"reminders\";\r\n  } else if (note.type === \"note\") {\r\n    classType = \"notes\";\r\n  }\r\n  return (\r\n    <>\r\n      <Col md={11}>\r\n        <div className={classType}>\r\n          <Row>\r\n            <Col md={10}>\r\n              <div className=\"reminderNoteTitle\">\r\n                <h6>{note.type}</h6>\r\n              </div>\r\n            </Col>\r\n            <Col md={{ offset: 0 }}>\r\n              <Row>\r\n                <span className=\"material-icons deleteBtn\" onClick={deleteNote}>\r\n                  delete_outline\r\n                </span>\r\n\r\n                <span className=\"material-icons deleteBtn\" onClick={handleShow}>\r\n                  mode_edit\r\n                </span>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <p>{note.content}</p>\r\n        </div>\r\n        <hr />\r\n      </Col>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Note/Reminder</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Content.</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={noteContentHander}\r\n                defaultValue={note.content}\r\n                onKeyPress={(event) => {\r\n                  if (event.charCode === 13) {\r\n                    editNoteHandler();\r\n                  }\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={editNoteHandler}>\r\n            Save Changes\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotesReminders;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Button, Form, Modal } from \"react-bootstrap\";\r\n\r\nconst Todos = ({\r\n  filteredTodo,\r\n  todos,\r\n  setTodos,\r\n  todoTitleText,\r\n  setTodoTitleText,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const editTaskTitleBtnHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === filteredTodo.id) {\r\n          return {\r\n            ...todo,\r\n            title: todoTitleText,\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n    handleClose();\r\n  };\r\n\r\n  const editTodoTitleHander = (e) => {\r\n    setTodoTitleText(e.target.value);\r\n  };\r\n\r\n  const editStatus = (e) => {\r\n    e.preventDefault();\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === filteredTodo.id) {\r\n          return {\r\n            ...todo,\r\n            status: e.target.value,\r\n          };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  let radioClassName = \"\";\r\n  let statusClassName = \"\";\r\n\r\n  if (filteredTodo.status === \"pending\") {\r\n    statusClassName = \"pendingStatus\";\r\n  } else if (filteredTodo.status === \"in progress\") {\r\n    statusClassName = \"inProgressStatus\";\r\n  }\r\n\r\n  if (filteredTodo.urgency === \"minor\") {\r\n    radioClassName = \"minorRadio\";\r\n  } else if (filteredTodo.urgency === \"normal\") {\r\n    radioClassName = \"normalRadio\";\r\n  } else if (filteredTodo.urgency === \"critical\") {\r\n    radioClassName = \"criticalRadio\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <p>{filteredTodo.title}</p>\r\n        </Col>\r\n        <Col md={{ offset: 0 }}>\r\n          <div className={statusClassName}>\r\n            <select\r\n              name=\"todos\"\r\n              value={filteredTodo.status}\r\n              onChange={editStatus}\r\n            >\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"in progress\">In progress</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"cancelled\">Cancelled</option>\r\n            </select>\r\n          </div>\r\n        </Col>\r\n        <Col md={{ offset: 0 }}>\r\n          <div className=\"urgency\">\r\n            <div className={radioClassName}></div>\r\n            <p>{filteredTodo.urgency}</p>\r\n          </div>\r\n        </Col>\r\n\r\n        <Col md={{ offset: 0 }}>\r\n          <span className=\"material-icons moreMenuBtn\" onClick={handleShow}>\r\n            more_horiz\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Task:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={filteredTodo.title}\r\n                onChange={editTodoTitleHander}\r\n                onKeyPress={(event) => {\r\n                  if (event.charCode === 13) {\r\n                    editTaskTitleBtnHandler();\r\n                  }\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={editTaskTitleBtnHandler}>\r\n            Save Changes\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst CompletedTodos = ({ filteredTodo, todos, setTodos }) => {\r\n  let statusClassName = \"\";\r\n\r\n  if (filteredTodo.status === \"completed\") {\r\n    statusClassName = \"completeStatus\";\r\n  } else if (filteredTodo.status === \"cancelled\") {\r\n    statusClassName = \"cancelledStatus\";\r\n  }\r\n\r\n  const deleteTodo = () => {\r\n    setTodos(todos.filter((el) => el.id !== filteredTodo.id));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={6}>\r\n        <p>{filteredTodo.title}</p>\r\n      </Col>\r\n      <Col md={{ offset: 0 }}>\r\n        <div className={statusClassName}>{filteredTodo.status}</div>\r\n      </Col>\r\n\r\n      <Col md={{ offset: 2 }}>\r\n        <span className=\"material-icons deleteBtn\" onClick={deleteTodo}>\r\n          delete_outline\r\n        </span>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CompletedTodos;\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row, Button, Form, Modal } from \"react-bootstrap\";\r\nimport NotesReminders from \"./NotesReminders\";\r\nimport Todos from \"./Todos\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport CompletedTodos from \"./CompletedTodos\";\r\n\r\nconst TodoNotes = ({\r\n  todos,\r\n  noteContent,\r\n  setNoteContent,\r\n  noteType,\r\n  setNoteType,\r\n  notes,\r\n  setNotes,\r\n  setTodoTitleText,\r\n  todoTitleText,\r\n  setTodos,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const setNoteTypeHander = (e) => {\r\n    e.preventDefault();\r\n    setNoteType(e.target.value);\r\n  };\r\n  const setNoteContentHandler = (e) => {\r\n    setNoteContent(e.target.value);\r\n  };\r\n\r\n  const submitNoteHandler = (e) => {\r\n    if (noteContent !== \"\" && noteType !== \"\") {\r\n      setNotes([\r\n        ...notes,\r\n        {\r\n          type: noteType,\r\n          content: noteContent,\r\n          id: uuidv4(),\r\n        },\r\n      ]);\r\n      setNoteType(\"\");\r\n      setNoteContent(\"\");\r\n      handleClose();\r\n    } else {\r\n      alert(\r\n        \"Please insert note/reminder content and select if its a note or reminder.\"\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={8}>\r\n          <div>\r\n            <div className=\"subHeaders\">\r\n              <h6>On Hold</h6>\r\n            </div>\r\n\r\n            <div id=\"pendingDiv\">\r\n              {todos\r\n                .filter(\r\n                  (todo) =>\r\n                    todo.status === \"pending\" || todo.status === \"in progress\"\r\n                )\r\n                .map((filteredTodo) => (\r\n                  <Todos\r\n                    filteredTodo={filteredTodo}\r\n                    key={filteredTodo.id}\r\n                    todoTitleText={todoTitleText}\r\n                    setTodoTitleText={setTodoTitleText}\r\n                    todos={todos}\r\n                    setTodos={setTodos}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"subHeaders\">\r\n              <h6>Completed/Cancelled</h6>\r\n            </div>\r\n            <div id=\"completedDiv\">\r\n              {todos\r\n                .filter(\r\n                  (todo) =>\r\n                    todo.status === \"completed\" || todo.status === \"cancelled\"\r\n                )\r\n                .map((filteredTodo) => (\r\n                  <CompletedTodos\r\n                    filteredTodo={filteredTodo}\r\n                    key={filteredTodo.id}\r\n                    todos={todos}\r\n                    setTodos={setTodos}\r\n                  />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Row>\r\n            <Col md={7}>\r\n              <div className=\"notesTitle\">\r\n                <h5>Notes and Reminders</h5>\r\n              </div>\r\n            </Col>\r\n            <Col md={{ offset: 1 }}>\r\n              <Button\r\n                variant=\"primary\"\r\n                id=\"addNoteBtn\"\r\n                size=\"sm\"\r\n                onClick={handleShow}\r\n              >\r\n                <span\r\n                  className=\"material-icons\"\r\n                  id=\"addIcon\"\r\n                  style={{ fontSize: \"20px\" }}\r\n                >\r\n                  add\r\n                </span>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div id=\"notesAndReminder\">\r\n            {notes.map((note) => (\r\n              <NotesReminders\r\n                note={note}\r\n                key={note.id}\r\n                notes={notes}\r\n                setNotes={setNotes}\r\n                noteContent={noteContent}\r\n                setNoteContent={setNoteContent}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Note/Reminder</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Row>\r\n              <Col className=\"mb-3\">\r\n                <select onChange={setNoteTypeHander} name=\"todos\">\r\n                  <option value=\"\" disabled selected>\r\n                    Type\r\n                  </option>\r\n                  <option value=\"note\">Note</option>\r\n                  <option value=\"reminder\">Reminder</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n            <Form.Group\r\n              className=\"mb-3\"\r\n              controlId=\"exampleForm.ControlTextarea1\"\r\n            >\r\n              <Form.Label>Description.</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                onChange={setNoteContentHandler}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={submitNoteHandler}>\r\n            Save Changes\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoNotes;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/App.css\";\nimport Header from \"./components/Header\";\nimport TodoNotes from \"./components/Todos-Notes\";\nfunction App() {\n  const [urgency, setUrgency] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [todoTitleText, setTodoTitleText] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n\n  const [noteType, setNoteType] = useState(\"\");\n  const [noteContent, setNoteContent] = useState(\"\");\n\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    getTodosFromLocalStorage();\n    getNotesFromLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    saveTodosToLocalStorage();\n  }, [todos]);\n\n  useEffect(() => {\n    saveNotesToLocalStorage();\n  }, [notes]);\n\n  const saveTodosToLocalStorage = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getTodosFromLocalStorage = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos);\n    }\n  };\n\n  const saveNotesToLocalStorage = () => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  };\n\n  const getNotesFromLocalStorage = () => {\n    if (localStorage.getItem(\"notes\") === null) {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    } else {\n      let localNotes = JSON.parse(localStorage.getItem(\"notes\"));\n      setNotes(localNotes);\n    }\n  };\n\n  return (\n    <div className=\"mainContainer\">\n      {/*header component*/}\n      <Header\n        urgency={urgency}\n        setUrgency={setUrgency}\n        setTodos={setTodos}\n        todos={todos}\n        todoTitleText={todoTitleText}\n        setTodoTitleText={setTodoTitleText}\n        status={status}\n      />\n\n      {/*Todo's & notes/reminders row*/}\n\n      <TodoNotes\n        todos={todos}\n        setTodos={setTodos}\n        setTodoTitleText={setTodoTitleText}\n        todoTitleText={todoTitleText}\n        noteType={noteType}\n        setNoteType={setNoteType}\n        noteContent={noteContent}\n        setNoteContent={setNoteContent}\n        notes={notes}\n        setNotes={setNotes}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}